{"mappings":"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","sources":["zone2-core/index.ts"],"sourcesContent":["import {\n  _Proxy as _Proxy_,\n  _Reflect,\n  snapshot,\n  _WeakMap,\n  _WeakMap_prototype,\n} from \"@portal-solutions/hooker-core\";\nconst { isFrozen } = Object;\nfunction trySet<T, K extends keyof T>(obj: T, key: K, val: T[K]): T[K] {\n  if (!isFrozen(obj)) obj[key] = val;\n  return val;\n}\nconst globalThis_: typeof globalThis = globalThis;\nexport interface ZoneProvider {\n  new (): IZone;\n  // awareProxy: typeof Proxy;\n  unawareProxy: typeof Proxy;\n  current: IZone | undefined;\n  hook<T>(a: T): T;\n}\nexport interface IZone {}\nexport interface Global {\n  Promise: typeof Promise;\n  // Proxy: typeof Proxy;\n}\nexport function create({\n  _Proxy = _Proxy_,\n  globalThis = globalThis_,\n}: {\n  _Proxy?: typeof Proxy;\n  globalThis: Global;\n}): ZoneProvider {\n  return class Zone implements IZone {\n    static #current: Zone | undefined = undefined;\n    static get current() {\n      return this.#current;\n    }\n    static #setCurrent(a: Zone | undefined) {\n      this.#current = a;\n      while (a && _WeakMap_prototype.has(this.#conflictResolver, a)) {\n        _WeakMap_prototype.get(this.#conflictResolver, a)();\n        _WeakMap_prototype.remove(this.#conflictResolver, a);\n      }\n      while (a === undefined && this.#undefinedConflictResolver) {\n        const old = this.#undefinedConflictResolver;\n        this.#undefinedConflictResolver = undefined;\n        old();\n      }\n    }\n    static #savedPromise: typeof Promise = globalThis.Promise;\n    static #conflictResolver: WeakMap<Zone, () => void> = new _WeakMap();\n    static #undefinedConflictResolver: (() => void) | undefined = undefined;\n    static #hookedPromise: typeof Promise = trySet(\n      globalThis,\n      \"Promise\",\n      new _Proxy(this.#savedPromise, {\n        apply(target, thisArg, argArray) {\n          if (argArray.length) argArray[0] = Zone.#hook(argArray[0]);\n          return _Reflect.apply(target, thisArg, argArray);\n        },\n        construct(target, argArray, thisArg) {\n          if (argArray.length) argArray[0] = Zone.#hook(argArray[0]);\n          return _Reflect.construct(target, argArray, thisArg);\n        },\n      })\n    );\n    // static #hookedProxy: typeof Proxy = trySet(globalThis, 'Proxy', new _Proxy(globalThis.Proxy, {\n    //     construct(target, argArray, thisArg) {\n    //         if (argArray.length >= 2) argArray[1] = {\n    //             ...new _Proxy(argArray[1], {\n    //                 get(object, key) {\n    //                     return Zone.#hook(_Reflect.get(object, key));\n    //                 }\n    //             })\n    //         };\n    //         return _Reflect.construct(target, argArray, thisArg);\n    //     }\n    // }));\n    // static get awareProxy() {\n    //     return this.#hookedProxy;\n    // }\n    static get unawareProxy() {\n      return _Proxy;\n    }\n    static #savedPromiseFinally = snapshot(\n      this.#hookedPromise.prototype.finally\n    );\n    static #hook<T>(object: T): T {\n      const snap = this.#current;\n      if (typeof object === \"function\")\n        object = new _Proxy(object, {\n          apply(target, thisArg, argArray) {\n            const old = Zone.#current;\n            Zone.#setCurrent(snap);\n            let disable = false;\n            try {\n              let value = _Reflect.apply(target, thisArg, argArray);\n              if (value instanceof Zone.#hookedPromise) {\n                disable = true;\n                value = Zone.#savedPromiseFinally(\n                  value,\n                  ((async_impl) => () => {\n                    if (Zone.#current === snap) {\n                      Zone.#setCurrent(old);\n                      return;\n                    }\n                    async_impl();\n                  })(async () => {\n                    for (;;) {\n                      if (Zone.#current === snap) {\n                        Zone.#setCurrent(old);\n                        return;\n                      } else {\n                        await new Zone.#savedPromise((resolve) => {\n                          if (snap === undefined) {\n                            Zone.#undefinedConflictResolver = () =>\n                              resolve(undefined);\n                          } else {\n                            _WeakMap_prototype.set(\n                              Zone.#conflictResolver,\n                              snap,\n                              resolve\n                            );\n                          }\n                        });\n                      }\n                    }\n                  })\n                );\n              }\n              return value;\n            } finally {\n              if (!disable) {\n                Zone.#setCurrent(old);\n              }\n            }\n          },\n        });\n      return object;\n    }\n    static hook<T>(object: T): T {\n      return this.#hook(object);\n    }\n    static {\n      for (const promiseKey of [\"then\", \"catch\", \"finally\"]) {\n        trySet(\n          this.#hookedPromise.prototype,\n          promiseKey as any,\n          new _Proxy(this.#hookedPromise.prototype[promiseKey], {\n            apply(target, thisArg, argArray) {\n              for (let i = 0; i < argArray.length; i++)\n                argArray[i] = Zone.#hook(argArray[i]);\n              return _Reflect.apply(target, thisArg, argArray);\n            },\n          })\n        );\n      }\n    }\n    constructor() {}\n  };\n}\n"],"names":[],"version":3,"file":"index.js.map"}